
/*
 * John Bonifas, Andrew Cannella
 * ACO 420 Spring 2015 Project 2
 * Created on March 17, 2015, 4:45:27 AM
 */

/*
 * NOTES
 * this worked in the shell to get user 0497:
 * scan 'messages', {STARTROW => 'userID0497', ENDROW => 'userID0498'}
 * deposit button = login button
 * accountText = message area
 * accountText1 = fromUser area
 * Entry point (main()) is near the end
 */
package FrontEnd;

import java.awt.GridLayout;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JTextArea;
import javax.swing.JScrollPane;

import org.apache.hadoop.conf.Configuration; 
import org.apache.hadoop.hbase.HBaseConfiguration;  
import org.apache.hadoop.hbase.client.*; 
//import org.apache.hadoop.hbase.filter.PrefixFilter;
import org.apache.hadoop.hbase.util.Bytes;

/**
 *
 * @author Slowly
 */
public class ChatFrontEnd extends javax.swing.JFrame 
{
  // my instance variables; netbeans ones are at the end
  
  // this is to shut Eclipse up
  public static final long serialVersionUID = 0;
  
  // the global that stores the userName
  private String userName;
  private long messageCount;
  
  /* CONSTRUCTOR */
  public ChatFrontEnd() 
  {
        
    setLayout(new GridLayout(0, 1));
    add(createLoadPanel());
    add(createFindPanel());
    add(createDepositPanel());

    initComponents();

  }

  private JPanel createLoadPanel()
  {
    JPanel panel = new JPanel();

    JButton loadButton = new JButton("Load");
    loadButton.setEnabled(true);
    panel.add(loadButton);

    return panel;
  }

  private JPanel createFindPanel()
  {
    JPanel panel = new JPanel();

    findButton = new JButton("Find");
    findButton.setEnabled(false);
    panel.add(findButton);

    addButton = new JButton("Add");
    addButton.setEnabled(false);
    panel.add(addButton);

    panel.add(new JLabel("Account number: "));

    //final JTextField accountText = new JTextField(10);
    JTextArea accountText = new JTextArea(100, 20);
    JScrollPane scrollPane = new JScrollPane(accountText); 
    accountText.setEditable(false);
    panel.add(accountText);

    return panel;
  }


  private JPanel createDepositPanel()
  {
    JPanel panel = new JPanel();
    depositButton = new JButton("Deposit");
    panel.add(depositButton);

    panel.add(new JLabel("Amount: "));

    final JTextField amountText = new JTextField(10);
    panel.add(amountText);

    depositButton.setEnabled(false);

    return panel;
  }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    findButton = new javax.swing.JButton();
    addButton = new javax.swing.JButton();
    accountText = new javax.swing.JTextArea();
    depositButton = new javax.swing.JButton();
    amountText = new javax.swing.JTextField();
    balanceLabel = new javax.swing.JLabel();
    accountText1 = new javax.swing.JTextArea();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    findButton.setText("Refresh");
    findButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        //so Eclipse will shut up
        try {
          findButtonActionPerformed(evt);
        } catch (IOException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
      }
    });

    addButton.setText("Send");
    addButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        // so Eclipse will shut up
        try {
          addButtonActionPerformed(evt);
        } catch (IOException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
      }
    });

    depositButton.setText("Login");
    depositButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        // this is just to shut it up
        try {
          depositButtonActionPerformed(evt);
        } catch (IOException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
      }
    });

    balanceLabel.setText("Send Message:");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(balanceLabel)
            .addGap(18, 18, 18)
            .addComponent(amountText))
          .addGroup(layout.createSequentialGroup()
            .addComponent(accountText, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(accountText1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(depositButton)
            .addGap(18, 18, 18)
            .addComponent(addButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(findButton)
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(0, 15, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(accountText, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(accountText1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(balanceLabel)
          .addComponent(amountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(depositButton)
          .addComponent(addButton)
          .addComponent(findButton))
        .addGap(31, 31, 31))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    //login button event
    private void depositButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException 
    {
      try
      {
        
        userName = JOptionPane.showInputDialog(null, "Enter a usernumber (with 1 leading zero)", 
                   "Login", JOptionPane.INFORMATION_MESSAGE);
        
        balanceLabel.setText(userName);
        
        Configuration config = HBaseConfiguration.create();
        HTable table = new HTable(config, "messages");
        Scan s = new Scan(Bytes.toBytes("userID" + userName), 
                          Bytes.toBytes("userID0" + Integer.parseInt(userName) + 1));

        s.addColumn(Bytes.toBytes("message"), Bytes.toBytes("message:Body"));
        ResultScanner scanner = table.getScanner(s);
        
        try
        {
          String strBuildup = "";
          for (Result rr : scanner)
          {
            //I must've spent hours googling for the magic Bytes.toString(rr.value())
            strBuildup = strBuildup + Bytes.toString(rr.value()) + "\n ";
            System.out.println(Bytes.toString(rr.value()));
            messageCount++;
          }
          //System.out.println(accountText.getText());
          //System.out.println(accountText1.getText());
          //System.out.println(strBuildup);
          accountText.setText(strBuildup);
          accountText1.setText(Long.toString(messageCount));
        }
                
        finally 
        {
          scanner.close();
          table.close();
          config.clear();
        }
        //JOptionPane.showMessageDialog(null, userName);
        
        depositButton.setEnabled(true);
      }
      catch (NumberFormatException ex)
      {
        JOptionPane.showMessageDialog(null, ex.getMessage());
      }
    }

    //refresh button event
    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException
    {//GEN-FIRST:event_findButtonActionPerformed
       try
        {
         balanceLabel.setText(userName);
         
         Configuration config = HBaseConfiguration.create();
         HTable table = new HTable(config, "messages");
         Scan s = new Scan(Bytes.toBytes("userID" + userName), 
                           Bytes.toBytes("userID0" + Integer.parseInt(userName) + 1));

         s.addColumn(Bytes.toBytes("message"), Bytes.toBytes("message:Body"));
         ResultScanner scanner = table.getScanner(s);
         
         try
         {
           String strBuildup = "";
           for (Result rr : scanner)
           {
             //I must've spent hours googling for the magic Bytes.toString(rr.value())
             strBuildup = strBuildup + Bytes.toString(rr.value()) + "\n ";
             System.out.println(Bytes.toString(rr.value()));
           }
           //System.out.println(accountText.getText());
           //System.out.println(accountText1.getText());
           //System.out.println(strBuildup);
           accountText.setText(strBuildup);
           accountText1.setText(Long.toString(messageCount));
           JOptionPane.showMessageDialog(null, amountText.getText());
         }
                 
         finally 
         {
           scanner.close();
           table.close();
           config.clear();
         }
          depositButton.setEnabled(true);
        }
        catch (IOException ex)
        {
          JOptionPane.showMessageDialog(null, ex.getMessage());
          depositButton.setEnabled(false);
        }
        catch (NumberFormatException ex)
        {
          JOptionPane.showMessageDialog(null, ex.getMessage());
          depositButton.setEnabled(false);
        }
    }//GEN-LAST:event_findButtonActionPerformed
    
    // send button event
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException 
    {//GEN-FIRST:event_addButtonActionPerformed
      //JOptionPane.showMessageDialog(null, "File Not Found");
    
      Configuration config = HBaseConfiguration.create();
      HTable table = new HTable(config, "messages");
      String index;
      //String messageTracker;
      //int messageNumber=0;
      messageCount++;
      
      DateFormat sdf= new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
      Calendar cal=Calendar.getInstance();
      String date=sdf.format(cal.getTime());
      //messageTracker="0000"+messageNumber;
      //messageTracker=messageTracker.substring(messageTracker.length()-4, messageTracker.length());
        
      index = "0000";
      index = index.substring(index.length()-4, index.length());
        
      Put p = new Put(Bytes.toBytes("userID" + userName + " Message Number: " + messageCount));
        
        p.add(Bytes.toBytes("message"), Bytes.toBytes("user:To"), Bytes.toBytes("userID"+userName+"@hbase.com"));
        p.add(Bytes.toBytes("message"), Bytes.toBytes("user:date"), Bytes.toBytes(date));
        p.add(Bytes.toBytes("message"), Bytes.toBytes("message:Title"), Bytes.toBytes("Message Title:"+ index));
        p.add(Bytes.toBytes("message"), Bytes.toBytes("message:Body"), Bytes.toBytes(amountText.getText()));
          
      table.put(p);
      table.close();
      config.clear();   
      
    }//GEN-LAST:event_addButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run()
            {
                ChatFrontEnd frame = new ChatFrontEnd();
                frame.setTitle("ACO 420 Spring 2015 Project2: Chat App");
                frame.setVisible(true);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextArea accountText;
  private javax.swing.JTextArea accountText1;
  private javax.swing.JButton addButton;
  private javax.swing.JTextField amountText;
  private javax.swing.JLabel balanceLabel;
  private javax.swing.JButton depositButton;
  private javax.swing.JButton findButton;
  // End of variables declaration//GEN-END:variables
  
}
